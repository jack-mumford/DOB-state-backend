name: Terraform PR Checks

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write  # required for OIDC login to Azure

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      TF_INPUT: false
      TF_CLI_ARGS_init: -no-color
      TF_CLI_ARGS_validate: -no-color
      TF_CLI_ARGS_plan: -no-color
      # If you are using Azure AD auth for the backend/provider, enable the following:
      ARM_USE_AZUREAD: true
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      # If you prefer using a Storage Account access key for the backend instead of AAD, set this secret and remove ARM_USE_AZUREAD above:
      ARM_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1

      # Login to Azure using OIDC (recommended). Requires the three secrets set above and a federated credential on the app registration.
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Format
        run: terraform fmt -check -diff

      # Initialize. If your backend requires extra settings, prefer setting them via secrets/environment vars rather than hardcoding.
      - name: Terraform Init
        run: terraform init -upgrade

      - name: Terraform Validate
        run: terraform validate

      # Create a plan. This will not apply changes, only compute the execution plan.
      - name: Terraform Plan
        run: terraform plan -input=false -lock=false -out=tfplan

      # Optionally, upload plan as an artifact for later review
      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan
