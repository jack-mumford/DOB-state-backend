name: Terraform Apply on Main

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write  # required for OIDC login to Azure

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      # Use the Service Principal JSON to set Terraform provider env vars
      ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
      ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
      ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}

      # Backend settings (container name defaults to tfstate if not set)
      AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
      AZURE_BACKEND_CONTAINER: tfstate
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1

      - name: Azure Login (Service Principal JSON)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init with backend-config flags
        run: terraform init -upgrade -backend-config="key=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}" -backend-config="container_name=tfstate" -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan